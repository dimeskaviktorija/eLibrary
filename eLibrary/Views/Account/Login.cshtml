@using eLibrary.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<style>
    .button-8 {
        background-color: #c84444;
        border-radius: 3px;
        border: 1px solid #7aa7c7;
        box-shadow: rgba(255, 255, 255, .7) 0 1px 0 0 inset;
        box-sizing: border-box;
        color: #ff0000;
        cursor: pointer;
        display: inline-block;
        font-family: -apple-system,system-ui,"Segoe UI","Liberation Sans",sans-serif;
        font-size: 13px;
        font-weight: 400;
        line-height: 1.15385;
        margin: 0;
        outline: none;
        padding: 8px .8em;
        position: relative;
        text-align: center;
        text-decoration: none;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        vertical-align: baseline;
        white-space: nowrap;
    }

    .button-8:hover,
    .button-8:focus {
        background-color: rgb(128, 128, 128);
        color: #ffffff;
    }

    .button-8:focus {
        box-shadow: 0 0 0 4px rgba(0, 149, 255, .15);
    }

    .button-8:active {
        background-color: #a0c7e4;
        box-shadow: none;
        color: #ffffff;
    }
</style >
    <h2 >@ViewBag.Title </h2 >
    <div class="row" >
    <div class="col-md-8" >
    <section id="loginForm" >
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                  <h4 > Use a local account to log in.</h4 >
                  <hr / >
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                  <div class="form-group" >
    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
    <div class="col-md-10" >
    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div >
    </div >
                  <div class="form-group" >
    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
    <div class="col-md-10" >
    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div >
    </div >
                  <div class="form-group" >
    <div class="col-md-offset-2 col-md-10" >
    <div class="checkbox" >
    @Html.CheckBoxFor(m => m.RememberMe)
    @Html.LabelFor(m => m.RememberMe)
    </div >
    </div >
    </div >
                  <div class="form-group" >
    <div class="col-md-offset-2 col-md-10" >
    <input type="submit" value="Log in" class="btn btn-default" / >
    </div >
    </div >
     <button class="button-8" >
    @Html.ActionLink("Register as a new user", "Register")
    </button >
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>
                *@
            }
    </section >
    </div >

    </div >

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}